import textwrap

from datatypes import PeerObject
from datatypes.clan.weapons import Weapon, WeaponType
from datatypes.user import get_user
from vkbottle.bot import Message


async def inventory(event: Message, peer_obj: PeerObject, params: None):
    inv_user = await get_user(event.from_id, event.peer_id)
    uinv_name = inv_user.get_nickname(event.peer_id)
    uinv_peer = inv_user.get_peer(event.peer_id)
    
    inv_items = uinv_peer.economic.inventory
    # inv_items.sword = Weapon(WeaponType.SWORD, 10, 12.28, "–ú–µ—á –ø–∏–∑–¥–∞—Ç—ã–π")
    # inv_items.boots = Weapon(WeaponType.BOOTS, 10, 1, "–ë–æ—Ç–∏–Ω–∫–∏ –∞—Ö—É–µ–Ω–Ω—ã–µ")

    if not inv_items:
        await event.answer(f"{uinv_name}, –≤–∞—à –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø—É—Å—Ç!", disable_mentions=True)
        return
    total_power = uinv_peer.get_strength()
    inv_str = f'üí™–°—É–º–º–∞—Ä–Ω–∞—è —Å–∏–ª–∞: {total_power}\n'
    inv_template = textwrap.dedent("""
        {1}. {0.Type.value} {0.name}
        (–£—Ä–æ–Ω: {0.dmg} | –ò—Å–ø. –æ—Å—Ç. = {0.UseLeft})\n
    """)
    for enum, i in enumerate(inv_items.__struct_fields__):
        value = getattr(inv_items, i)
        if value != None:
            inv_str += inv_template.format(value, enum)
    await event.answer(
        f"{uinv_name}, –≤–∞—à–∏ –≤–µ—â–∏: \n{inv_str}", 
        disable_mentions=True
    )
