from datetime import datetime

from datatypes import PeerObject, User
from datatypes.peer import ban_info_struct, ban_struct
from loader import TIME_FORMAT, tz
from vkbottle import VKAPIError
from vkbottle.bot import Message


async def ban(event: Message, peer_obj: PeerObject, params: list[User]):
    usr_to_ban = params[0]
    if [ban.banned_uid for ban in peer_obj.data.ban_list if ban.banned_uid == usr_to_ban.id]:
        status = "üö´–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω!"
    else:
        try:
            await event.ctx_api.messages.remove_chat_user(event.chat_id, member_id=usr_to_ban.id)
            ban_time = datetime.fromtimestamp(event.date, tz).strftime(TIME_FORMAT)
            banned_by = ban_info_struct(
                banned_by = event.from_id, 
                ban_time_str = ban_time
            )
            peer_obj.data.users.remove(usr_to_ban.id)
            peer_obj.data.ban_list.append(ban_struct(
                    banned_uid = usr_to_ban.id,
                    ban_info = banned_by,
                )
            )
            await peer_obj.save()
            status = "‚úÖ–£—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω!"
        except VKAPIError[935]:
            status = "üö´–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —Å–æ—Å—Ç–æ–∏—Ç –≤ –±–µ—Å–µ–¥–µ!"
        except VKAPIError[15]:
            status = "üö´–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∑–∞–±–∞–Ω–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    await event.answer(status)